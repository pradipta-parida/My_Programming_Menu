> Smoke Testing - is the initial testing process exercised to check whether the software under test is
                  ready/stable for further testing. It is also known as build acceptance testing.

> Retesting - After a bug is fixed, we perform a retest on that functionality to validate the proper functioning, 
              with expected results

> Sanity Testing - is a kind of software testing performed after receiving a software build, with minor
                   changes in code, or functionality, to ascertain that the bugs have been fixed and no
                   further issues are introduced due to these changes.

> Regression Testing - Repeated testing of an already tested program, after modification, to discover ay defects intorduced
                       or uncovered as a result of the changes in the software being tested or in another related or unrelated 
                       software components.

                       Usually, we do regression testing in the following cases:
                       . New functionalities are added to the application
                       . Change Requirement (In organizations we call its as CR)
                       . Defect Fixing
                       . Performance Issue Fix
                       . Enviroment Change (E.g; Updating the DB from MySQL to Oracle)

                       Types Of Regression Testing:
                        . Unit Regression Testing- Testing only the changes/modifications made by the developer
                        . Regional Regression Testing- Testing the changed part/module and the impacted modules
                                                       (Impact Analysis Meeting is held to discuss the
                                                        modules that are impacting due to the changes)
                        . Full Regression Testing- Testing the changed feature and the remaining part of the
                                                   application(if developer has done changes to most of the
                                                   modules/root of a project,then don't go for testing impacted
                                                   modules ,instead without wasting any time straight go for
                                                   Full Regression Testing)



> Functional Testing - Testing the Functional Requirements/Features of the software is known as Functional Testing.
                       Functional Testing falls under the category of the Blackbox testing.
                       e.g; If the client clicks this button, it should open up the home page.

> Non-Functional Testing - Testing the performance of your software, the load/capacity they handle, how reliable
                           is the software and it also talks about the scalability of the software.

> Black Box Testing - Testing the functionality of an application without actually looking at the code.
                      e.g; The analogy goes like there is a box which is black, inside that there is code.
                      so, you have to test the code which is not visible to you.

> Exploratory Testing - is a type of software testing in which the tester is free to select any possible methodology to test the software.
                        It is an unscripted approach to software testing.
                        For example, you might perform one test and then ask yourself, “What if I tried this? What if I didn't do that?”

> Integration Testing - is to validate that different software components, subsystems, or applications work together as a system to achieve 
                        the desired functionality and performance

> ALM (Application Lifecycle Management) tools - are software that developers, analysts, and other stakeholders use for application management.
                                                They provide a standardized environment that everyone can use to communicate and collaborate.
                                                A software tool for managing the entire lifecycle of software applications.

> 
