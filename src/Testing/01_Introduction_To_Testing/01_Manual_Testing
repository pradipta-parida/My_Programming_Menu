> Smoke Testing - is the initial testing process exercised to check whether the software under test is
                  ready/stable for further testing. It is also known as build acceptance testing.

> Sanity Testing - is a kind of software testing performed after receiving a software build, with minor
                   changes in code, or functionality, to ascertain that the bugs have been fixed and no
                   further issues are introduced due to these changes.

> Regression Testing - Repeated testing of an already tested program, after modification, to discover ay defects intorduced
                       or uncovered as a result of the changes in the software being tested or in another related or unrelated 
                       software components.

                       Usually, we do regression testing in the following cases:
                       . New functionalities are added to the application
                       . Change Requirement (In organizations we call its as CR)
                       . Defect Fixing
                       . Performance Issue Fix
                       . Enviroment Change (E.g; Updating the DB from MySQL to Oracle)

                       Types Of Regression Testing:
                        . Unit Regression Testing- Testing only the changes/modifications made by the developer
                        . Regional Regression Testing- Testing the changed part/module and the impacted modules
                                                       (Impact Analysis Meeting is held to discuss the
                                                        modules that are impacting due to the changes)
                        . Full Regression Testing- Testing the changed feature and the remaining part of the
                                                   application(if developer has done changes to most of the
                                                   modules/root of a project,then don't go for testing impacted
                                                   modules ,instead without wasting any time straight go for
                                                   Full Regression Testing)

> Retesting - To ensure that the defects which were found and posted in the earlier build were fixed or not in the current
              build. Defects raised by QA and on fixing it by the Dev, we do the retesting.
              Example;
              - Build 1.0 was released. Test team found some defects (Defect Id 1.0.1, 1.0.2) and posted.
              - Build 1.1 was released, now testing the defects 1.0.1, 1.0.2 in this build is retesting.

** Difference between Regression and Retesting:
              Case 1: Login Page - Login button not working (Bug) ---> Re=testing and Regression Testing
              Case 2: Login Page - Added "Stayed signed in" checkbox (New feature) ---> Regression Testing

> Globalization Testing Vs Localization Testing:
              Q) What is Localization (OR) L10N Testing?
              A) Localization testing is the software testing process for checking the localized version of a product
                 for that particular culture or locale settings. The areas affected by localization testing are UI and content.
                 e.g; To test DOB format - dd/mm/yyyy

              Q) What is Globalization (OR) Internationalization (I18N) Testing?
              A) Globalization testing is to ensure that application can function in any culture or locale (language,
                 territory and code page).  
                 e.g; To test DOB format - mm/dd/yyyy

> END-TO END Testing: Testing the overall functionalities of the system including the data integration among all the modules
                      is called end-to-end testing.

                     Login --> Add Customer --> Delete Customer/Edit Customer --> Logout

> Exploratory Testing:
                      Q) What is Exploratory Testing?
                      A) - It is all about discovery, investigation and learning.
                         - It emphasizes on personal freedom and responsibility of the individual tester.
                         - Test cases are not created in advance but testers check system on the fly
                         - The focus of exploratory testing is more on testing as a "thinking" activity

                      Q) When use exploratory testing?
                      A) - When the testing team has experienced testers
                         - There is a critical application
                         - Early iteration is required
                         - New testers entered into the team
                        For example, you might perform one test and then ask yourself,
                        “What if I tried this? What if I didn't do that?”
> Adhoc Testing:
                  - Adhoc testing is an informal testing type with an aim to break the system.
                  - This testing is usually an unplanned activity (No documentation, no test design, no test case)
                  - It does not follow any test design techniques to create test cases. This testing is primarily performed
                    if the knowledge of testers in the system under test is very high
                  - Testers randomly test the application without any test cases or any business requirement document.

> Adhoc Testing V/s Monkey Testing V/s Exploratory Testing
  -------------------------------------------------------------------
  - No Documentation , No Documentation , No Documentation
  - No Plan , No Plan , No Plan
  - Informal Testing , Informal Testing , Informal Testing
  - Testers should know application functionality , doesn't know app functionality , doesn't know app functionality
  - Random Testing , Random Testing, Random Testing
  - Intention is to break the application/ find out corner defects , Intention is to break the application/ find out corner defects , Intention is to learn or explore functioanlity of application
  - Any applications, Gaming applications , Any application which is new to tester

> Functional Testing - Testing the Functional Requirements/Features of the software is known as Functional Testing.
                       Functional Testing falls under the category of the Blackbox testing.
                       e.g; If the client clicks this button, it should open up the home page.

> Non-Functional Testing - Testing the performance of your software, the load/capacity they handle, how reliable
                           is the software and it also talks about the scalability of the software.

> Black Box Testing - Testing the functionality of an application without actually looking at the code.
                      e.g; The analogy goes like there is a box which is black, inside that there is code.
                      so, you have to test the code which is not visible to you.



> Integration Testing - is to validate that different software components, subsystems, or applications work together as a system to achieve 
                        the desired functionality and performance

> ALM (Application Lifecycle Management) tools - are software that developers, analysts, and other stakeholders use for application management.
                                                They provide a standardized environment that everyone can use to communicate and collaborate.
                                                A software tool for managing the entire lifecycle of software applications.

> 
